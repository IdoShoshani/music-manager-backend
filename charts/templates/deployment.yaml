apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "music-app-backend.fullname" . }}
  labels:
    app: {{ include "music-app-backend.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "music-app-backend.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "music-app-backend.name" . }}
    spec:
      serviceAccountName: secret-copier
      initContainers:
        - name: secret-copier
          image: idoshoshani123/music-app-backend-init-container-copy-secret:latest
          imagePullPolicy: Always
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-mongodb-credentials
                  key: mongodb-passwords
            - name: MONGO_URI
              value: "mongodb://appUser:$(MONGODB_PASSWORD)@mongodb.mongodb.svc.cluster.local:27017/music_db"
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
